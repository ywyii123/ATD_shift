
# general settings
name: CT_ATD_bicx4_uniform_rho_1_sigmax_2_sigmin_0_loss_lpips_step_4
model_type: ATDModel
scale: 4
num_gpu: 8
manual_seed: 0
# find_unused_parameters: True

# dataset and data loader settings
datasets:
  train:
    name: ImageNet
    type: ImageNetPairedDataset
    dataroot_gt: /data/datasets/ImageNet/data/ImageNet2012/ILSVRC2012_img_train
    dataroot_lq: 
    filename_tmpl: '{}x4'
    io_backend:
      type: disk

    gt_size: 256
    upsample: True
    use_hflip: false
    use_rot: false
    mean: 0.5
    std: 0.5

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 1
    prefetch_mode: cuda
    pin_memory: True
    persistent_workers: True

  val_1:
    name: ImageNet
    type: ImageNetPairedDataset
    dataroot_gt: /home/youweiyi/project/Adaptive-Token-Dictionary/validation/ImageNet/Bicubicx4/gt
    dataroot_lq: /home/youweiyi/project/Adaptive-Token-Dictionary/validation/ImageNet/Bicubicx4/lq_opencv
    mean: 0.5
    std: 0.5
    gt_size: 256
    upsample: True
    io_backend:
      type: disk

  # val_2:
  #   name: Set14
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/Set14/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/Set14/x2
  #   io_backend:
  #     type: disk

  # val_3:
  #   name: BSD100
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/B100/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/B100/x2
  #   io_backend:
  #     type: disk
  
  # val_4:
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/Urban100/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/Urban100/x2
  #   io_backend:
  #     type: disk

  # val_5:
  #   name: Manga109
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/Manga109/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/Manga109/x2
  #   io_backend:
  #     type: disk

# network structures
network_g:
  type: ATD
  upscale: 4
  in_chans: 3
  img_size: 64
  embed_dim: 192
  depths: [6, 6, 6, 6, 6]
  num_heads: [6, 6, 6, 6, 6, 6,]
  window_size: 16
  category_size: 256
  num_tokens: 128
  reducted_dim: 20
  convffn_kernel_size: 5
  img_range: 1.
  mlp_ratio: 2
  upsampler: 'consistency'
  resi_connection: '1conv'
  use_checkpoint: False
  channel_mult_emb: 4
  sigma_data: 0.5
  sigma_min: 0
  cond_lq: True
  dropout: 0.1
  time_emb: True

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 5e-5
    weight_decay: 0
    betas: [0.9, 0.9]

  scheduler:
    type: MultiStepLR
    milestones: [250000]
    gamma: 0.5

  total_iter: 300000
  warmup_iter: 10000

  # losses
  # pixel_opt:
  #   type: L1Loss
  #   loss_weight: 1.0
  #   reduction: mean
  consistency_opt:
    type: LPIPSLoss
    sigma_min: 0
    sigma_max: 2
    rho: 1
    s0: 4
    s1: 32
    constant_step: 4
    p_mean: 0
    p_std: 0

# validation settings
val:
  val_freq: 1000
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: yes
    
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 0
      test_y_channel: yes

    lpips:
      type: calculate_lpips

# logging settings
logger:
  print_freq: 100
  tb_freq: 100
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500