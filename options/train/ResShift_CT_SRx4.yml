
# general settings
name: CT_bicx4_lpipsloss_imagenet_resshift_8_2_60w
model_type: ResModel
scale: 4
num_gpu: 4
manual_seed: 0
find_unused_parameters: True

# dataset and data loader settings
datasets:
  train:
    name: ImageNet
    # name: afhqv2_256
    type: ShiftImagenetDataset
    dataroot_gt: /data/datasets/ImageNet/data/ImageNet2012/ILSVRC2012_img_train
    # dataroot_gt: /data/datasets/afhqv2-256x256_train
    dataroot_lq: 
    filename_tmpl: '{}x4'
    io_backend:
      type: disk

    gt_size: 256
    scale: 4
    upsample: True
    upsampler: 'nearest'
    mean: 0.5
    std: 0.5

    # data loader
    num_worker_per_gpu: 4
    batch_size_per_gpu: 2
    dataset_enlarge_ratio: 1
    prefetch_mode: cuda
    pin_memory: True
    persistent_workers: True

  val_1:
    name: ImageNet
    # name: afhqv2_256
    type: ShiftImagenetDataset
    dataroot_gt: ./validation/ImageNet/Bicubicx4/gt
    # dataroot_gt: ./validation/afhqv2_256/bicx4/gt
    # dataroot_lq: ./validation/ImageNet/Bicubicx4/lq_opencv
    mean: 0.5
    std: 0.5
    gt_size: 256
    scale: 4
    upsample: True
    upsampler: 'nearest'
    io_backend:
      type: disk

  # val_2:
  #   name: Set14
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/Set14/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/Set14/x2
  #   io_backend:
  #     type: disk

  # val_3:
  #   name: BSD100
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/B100/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/B100/x2
  #   io_backend:
  #     type: disk
  
  # val_4:
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/Urban100/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/Urban100/x2
  #   io_backend:
  #     type: disk

  # val_5:
  #   name: Manga109
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/TestDataSR/HR/Manga109/x2
  #   dataroot_lq: datasets/TestDataSR/LR/LRBI/Manga109/x2
  #   io_backend:
  #     type: disk

# network structures
network_g:
  type: UNetModelSwin

  image_size: 256
  in_channels: 6
  model_channels: 160
  out_channels: 3
  cond_lq: True
  attention_resolutions: [256, 128, 64, 32]
  dropout: 0
  channel_mult: [1, 2, 2, 4]
  num_res_blocks: [2, 2, 2, 2]
  conv_resample: True
  dims: 2
  use_fp16: False
  num_head_channels: 32
  use_scale_shift_norm: True
  resblock_updown: False
  swin_depth: 2
  swin_embed_dim: 192
  window_size: 8
  mlp_ratio: 4


# path
path:
  pretrain_network_g: ~
  # pretrain_network_g: experiments/CT_bicx4_l2loss_swin_multi_step_5_shift_layer_8_depth_6_sigma_1_iter_40w/models/net_g_180000.pth
  strict_load_g: true
  # resume_state: experiments/CT_bicx4_l2loss_swin_multi_step_5_shift_layer_8_depth_6_sigma_1_iter_40w/training_states/180000.state
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 5e-5
    weight_decay: 0
    betas: [0.9, 0.9]

  scheduler:
    type: MultiStepLR
    milestones: [400000]
    gamma: 0.5

  total_iter: 600000
  warmup_iter: 10000

  # losses
  # pixel_opt:
  #   type: L1Loss
  #   loss_weight: 1.0
  #   reduction: mean
  consistency_opt:
    type: LPIPSLoss
    sigma_min: 0
    sigma_max: 2
    rho: 1
    s0: 8
    s1: 2
    constant_steps: 0
    multi_step: false
    p_mean: 0
    p_std: 0
    skip: false

# validation settings
val:
  val_freq: 2000
  save_img: True

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: yes
    
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 0
      test_y_channel: yes

    lpips:
      type: calculate_lpips
      better: lower

# logging settings
logger:
  print_freq: 100
  tb_freq: 1000
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: True
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500